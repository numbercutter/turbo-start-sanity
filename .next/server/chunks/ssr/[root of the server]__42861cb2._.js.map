{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/hooks/use-is-mobile.ts"],"sourcesContent":["import * as React from \"react\";\n\ninterface MediaQueryResult {\n  matches: boolean;\n  addEventListener: (\n    type: string,\n    listener: (event: MediaQueryListEvent) => void,\n  ) => void;\n  removeEventListener: (\n    type: string,\n    listener: (event: MediaQueryListEvent) => void,\n  ) => void;\n  addListener?: (listener: (event: MediaQueryListEvent) => void) => void;\n  removeListener?: (listener: (event: MediaQueryListEvent) => void) => void;\n}\n\nexport function useIsMobile(mobileScreenSize = 768) {\n  const [isMobile, setIsMobile] = React.useState(() => {\n    if (\n      typeof window === \"undefined\" ||\n      typeof window.matchMedia !== \"function\"\n    ) {\n      return undefined;\n    }\n    return window.matchMedia(`(max-width: ${mobileScreenSize}px)`).matches;\n  });\n\n  const checkIsMobile = React.useCallback((event: MediaQueryListEvent) => {\n    setIsMobile(event.matches);\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      typeof window === \"undefined\" ||\n      typeof window.matchMedia !== \"function\"\n    ) {\n      return;\n    }\n\n    const mediaListener: MediaQueryResult = window.matchMedia(\n      `(max-width: ${mobileScreenSize}px)`,\n    );\n\n    const attachListener = () => {\n      if (mediaListener.addEventListener) {\n        mediaListener.addEventListener(\"change\", checkIsMobile);\n      } else if (mediaListener.addListener) {\n        mediaListener.addListener(checkIsMobile);\n      }\n    };\n\n    const removeListener = () => {\n      if (mediaListener.removeEventListener) {\n        mediaListener.removeEventListener(\"change\", checkIsMobile);\n      } else if (mediaListener.removeListener) {\n        mediaListener.removeListener(checkIsMobile);\n      }\n    };\n\n    attachListener();\n    return removeListener;\n  }, [mobileScreenSize, checkIsMobile]);\n\n  return isMobile;\n}\n"],"names":[],"mappings":";;;AAAA;;AAgBO,SAAS,YAAY,mBAAmB,GAAG;IAChD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;QAC7C,wCAGE;YACA,OAAO;QACT;;IAEF;IAEA,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EAAE,CAAC;QACvC,YAAY,MAAM,OAAO;IAC3B,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,wCAGE;YACA;QACF;;QAEA,MAAM;QAIN,MAAM;QAQN,MAAM;IAUR,GAAG;QAAC;QAAkB;KAAc;IAEpC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/lib/sanity/api.ts"],"sourcesContent":["function assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage);\n  }\n\n  return v;\n}\n\nexport const dataset = process.env.NEXT_PUBLIC_SANITY_DATASET ?? \"production\";\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID\",\n);\n\n/**\n * see https://www.sanity.io/docs/api-versioning for how versioning works\n */\nexport const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || \"2024-10-28\";\n\n/**\n * Used to configure edit intent links, for Presentation Mode, as well as to configure where the Studio is mounted in the router.\n */\nexport const studioUrl =\n  process.env.NEXT_PUBLIC_SANITY_STUDIO_URL || \"http://localhost:3333\";\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEO,MAAM,UAAU,QAAQ,GAAG,CAAC,0BAA0B,IAAI;AAE1D,MAAM,YAAY,YACvB,QAAQ,GAAG,CAAC,6BAA6B,EACzC;AAMK,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAKzC,MAAM,YACX,QAAQ,GAAG,CAAC,6BAA6B,IAAI","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/lib/sanity/client.ts"],"sourcesContent":["import type { SanityImageSource } from \"@sanity/asset-utils\";\nimport createImageUrlBuilder from \"@sanity/image-url\";\nimport { createClient } from \"next-sanity\";\n\nimport { apiVersion, dataset, projectId, studioUrl } from \"./api\";\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: process.env.NODE_ENV === \"production\",\n  perspective: \"published\",\n  stega: {\n    studioUrl,\n    enabled: process.env.NEXT_PUBLIC_VERCEL_ENV === \"preview\",\n  },\n});\n\nconst imageBuilder = createImageUrlBuilder({\n  projectId: projectId,\n  dataset: dataset,\n});\n\nexport const urlFor = (source: SanityImageSource) =>\n  imageBuilder.image(source).auto(\"format\").fit(\"max\").format(\"webp\");\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;;;;AAEO,MAAM,SAAS,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,YAAA,oHAAA,CAAA,aAAU;IACV,QAAQ,oDAAyB;IACjC,aAAa;IACb,OAAO;QACL,WAAA,oHAAA,CAAA,YAAS;QACT,SAAS,QAAQ,GAAG,CAAC,sBAAsB,KAAK;IAClD;AACF;AAEA,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,UAAqB,AAAD,EAAE;IACzC,WAAW,oHAAA,CAAA,YAAS;IACpB,SAAS,oHAAA,CAAA,UAAO;AAClB;AAEO,MAAM,SAAS,CAAC,SACrB,aAAa,KAAK,CAAC,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,MAAM,CAAC","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/sanity-image.tsx"],"sourcesContent":["import { getImageDimensions } from \"@sanity/asset-utils\";\nimport { cn } from \"@workspace/ui/lib/utils\";\nimport Image, { type ImageProps as NextImageProps } from \"next/image\";\n\nimport { urlFor } from \"@/lib/sanity/client\";\nimport type { SanityImageProps } from \"@/types\";\n\ntype ImageProps = {\n  asset: SanityImageProps;\n  alt?: string;\n} & Omit<NextImageProps, \"alt\" | \"src\">;\n\nfunction getBlurDataURL(asset: SanityImageProps) {\n  if (asset?.blurData) {\n    return {\n      blurDataURL: asset.blurData,\n      placeholder: \"blur\" as const,\n    };\n  }\n  return {};\n}\n\nexport function SanityImage({\n  asset,\n  alt,\n  width,\n  height,\n  className,\n  quality = 75,\n  fill,\n  ...props\n}: ImageProps) {\n  if (!asset?.asset) return null;\n  const dimensions = getImageDimensions(asset.asset);\n\n  const url = urlFor({ ...asset, _id: asset?.asset?._ref })\n    .size(\n      Number(width ?? dimensions.width),\n      Number(height ?? dimensions.height),\n    )\n    .dpr(2)\n    .auto(\"format\")\n    .quality(Number(quality))\n    .url();\n\n  // Base image props\n  const imageProps = {\n    alt: alt ?? asset.alt ?? \"Image\",\n    \"aria-label\": alt ?? asset.alt ?? \"Image\",\n    src: url,\n    className: cn(className),\n    // Optimize image sizes for performance and LCP\n    // Use smaller percentages to reduce initial load size while maintaining quality\n    // Order from smallest to largest breakpoint for better browser parsing\n    // Define responsive image sizes for optimal loading:\n    // - Mobile (<640px): Image takes up 80% of viewport width\n    // - Tablet (<768px): Image takes up 50% of viewport width\n    // - Small desktop (<1200px): Image takes up 33% of viewport width\n    // - Large desktop (>1200px): Image takes up 25% of viewport width\n    sizes:\n      \"(max-width: 640px) 75vw, (max-width: 768px) 50vw, (max-width: 1200px) 33vw, 25vw\",\n    ...getBlurDataURL(asset),\n    ...props,\n  };\n\n  // Add width and height only if fill is not true\n  if (!fill) {\n    return (\n      <Image\n        {...imageProps}\n        width={width ?? dimensions.width}\n        height={height ?? dimensions.height}\n      />\n    );\n  }\n\n  return <Image {...imageProps} fill={fill} />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAEA;AAEA;;;;;;AAQA,SAAS,eAAe,KAAuB;IAC7C,IAAI,OAAO,UAAU;QACnB,OAAO;YACL,aAAa,MAAM,QAAQ;YAC3B,aAAa;QACf;IACF;IACA,OAAO,CAAC;AACV;AAEO,SAAS,YAAY,EAC1B,KAAK,EACL,GAAG,EACH,KAAK,EACL,MAAM,EACN,SAAS,EACT,UAAU,EAAE,EACZ,IAAI,EACJ,GAAG,OACQ;IACX,IAAI,CAAC,OAAO,OAAO,OAAO;IAC1B,MAAM,aAAa,CAAA,GAAA,2JAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM,KAAK;IAEjD,MAAM,MAAM,CAAA,GAAA,uHAAA,CAAA,SAAM,AAAD,EAAE;QAAE,GAAG,KAAK;QAAE,KAAK,OAAO,OAAO;IAAK,GACpD,IAAI,CACH,OAAO,SAAS,WAAW,KAAK,GAChC,OAAO,UAAU,WAAW,MAAM,GAEnC,GAAG,CAAC,GACJ,IAAI,CAAC,UACL,OAAO,CAAC,OAAO,UACf,GAAG;IAEN,mBAAmB;IACnB,MAAM,aAAa;QACjB,KAAK,OAAO,MAAM,GAAG,IAAI;QACzB,cAAc,OAAO,MAAM,GAAG,IAAI;QAClC,KAAK;QACL,WAAW,GAAG;QACd,+CAA+C;QAC/C,gFAAgF;QAChF,uEAAuE;QACvE,qDAAqD;QACrD,0DAA0D;QAC1D,0DAA0D;QAC1D,kEAAkE;QAClE,kEAAkE;QAClE,OACE;QACF,GAAG,eAAe,MAAM;QACxB,GAAG,KAAK;IACV;IAEA,gDAAgD;IAChD,IAAI,CAAC,MAAM;QACT,qBACE,8OAAC,6HAAA,CAAA,UAAK;YACH,GAAG,UAAU;YACd,OAAO,SAAS,WAAW,KAAK;YAChC,QAAQ,UAAU,WAAW,MAAM;;;;;;IAGzC;IAEA,qBAAO,8OAAC,6HAAA,CAAA,UAAK;QAAE,GAAG,UAAU;QAAE,MAAM;;;;;;AACtC","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/logo.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport Link from \"next/link\";\n\nimport type { Maybe, SanityImageProps } from \"@/types\";\n\nimport { SanityImage } from \"./sanity-image\";\n\nconst LOGO_URL =\n  \"https://cdn.sanity.io/images/s6kuy1ts/production/68c438f68264717e93c7ba1e85f1d0c4b58b33c2-1200x621.svg\";\n\ninterface LogoProps {\n  src?: Maybe<string>;\n  image?: Maybe<SanityImageProps>;\n  alt?: Maybe<string>;\n  width?: number;\n  height?: number;\n  priority?: boolean;\n}\n\nexport function Logo({\n  src,\n  alt = \"logo\",\n  image,\n  width = 170,\n  height = 40,\n  priority = true,\n}: LogoProps) {\n  return (\n    <Link href=\"/\" className=\"\">\n      {image ? (\n        <SanityImage\n          asset={image}\n          alt={alt ?? \"logo\"}\n          width={width}\n          className=\"w-[170px] h-[40px] dark:invert\"\n          height={height}\n          priority={priority}\n          loading=\"eager\"\n          decoding=\"sync\"\n          quality={100}\n        />\n      ) : (\n        <Image\n          src={src ?? LOGO_URL}\n          alt={alt ?? \"logo\"}\n          width={width}\n          className=\"w-[170px] h-[40px] dark:invert\"\n          height={height}\n          loading=\"eager\"\n          priority={priority}\n          decoding=\"sync\"\n        />\n      )}\n    </Link>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAIA;;;;;AAEA,MAAM,WACJ;AAWK,SAAS,KAAK,EACnB,GAAG,EACH,MAAM,MAAM,EACZ,KAAK,EACL,QAAQ,GAAG,EACX,SAAS,EAAE,EACX,WAAW,IAAI,EACL;IACV,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAK;QAAI,WAAU;kBACtB,sBACC,8OAAC,8HAAA,CAAA,cAAW;YACV,OAAO;YACP,KAAK,OAAO;YACZ,OAAO;YACP,WAAU;YACV,QAAQ;YACR,UAAU;YACV,SAAQ;YACR,UAAS;YACT,SAAS;;;;;iCAGX,8OAAC,6HAAA,CAAA,UAAK;YACJ,KAAK,OAAO;YACZ,KAAK,OAAO;YACZ,OAAO;YACP,WAAU;YACV,QAAQ;YACR,SAAQ;YACR,UAAU;YACV,UAAS;;;;;;;;;;;AAKnB","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/mode-toggle.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@workspace/ui/components/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@workspace/ui/components/dropdown-menu\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\n\nexport function ModeToggle() {\n  const { setTheme } = useTheme();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\" className=\"rounded-[10px]\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onClick={() => setTheme(\"light\")}>\n          Light\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"dark\")}>\n          Dark\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"system\")}>\n          System\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AASA;AAAA;AACA;AAVA;;;;;;AAYO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAE5B,qBACE,8OAAC;;0BACC,8OAAC;gBAAoB,OAAO;0BAC1B,cAAA,8OAAC;oBAAO,SAAQ;oBAAU,MAAK;oBAAO,WAAU;;sCAC9C,8OAAC,gMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;sCACf,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAG9B,8OAAC;gBAAoB,OAAM;;kCACzB,8OAAC;wBAAiB,SAAS,IAAM,SAAS;kCAAU;;;;;;kCAGpD,8OAAC;wBAAiB,SAAS,IAAM,SAAS;kCAAS;;;;;;kCAGnD,8OAAC;wBAAiB,SAAS,IAAM,SAAS;kCAAW;;;;;;;;;;;;;;;;;;AAM7D","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/sanity-buttons.tsx"],"sourcesContent":["import { Button } from \"@workspace/ui/components/button\";\nimport { cn } from \"@workspace/ui/lib/utils\";\nimport Link from \"next/link\";\nimport type { ComponentProps } from \"react\";\n\nimport type { SanityButtonProps } from \"@/types\";\n\ntype SanityButtonsProps = {\n  buttons: SanityButtonProps[] | null;\n  className?: string;\n  buttonClassName?: string;\n  size?: \"sm\" | \"lg\" | \"default\" | \"icon\" | null | undefined;\n};\n\nfunction SanityButton({\n  text,\n  href,\n  variant = \"default\",\n  openInNewTab,\n  className,\n  ...props\n}: SanityButtonProps & ComponentProps<typeof Button>) {\n  if (!href) {\n    console.log(\"Link Broken\", { text, href, variant, openInNewTab });\n    return <Button>Link Broken</Button>;\n  }\n\n  return (\n    <Button\n      variant={variant}\n      {...props}\n      asChild\n      className={cn(\"rounded-[10px]\", className)}\n    >\n      <Link\n        href={href || \"#\"}\n        target={openInNewTab ? \"_blank\" : \"_self\"}\n        aria-label={`Navigate to ${text}`}\n        title={`Click to visit ${text}`}\n      >\n        {text}\n      </Link>\n    </Button>\n  );\n}\n\nexport function SanityButtons({\n  buttons,\n  className,\n  buttonClassName,\n  size = \"default\",\n}: SanityButtonsProps) {\n  if (!buttons?.length) return null;\n\n  return (\n    <div className={cn(\"flex flex-col sm:flex-row gap-4\", className)}>\n      {buttons.map((button) => (\n        <SanityButton\n          key={`button-${button._key}`}\n          size={size}\n          {...button}\n          className={buttonClassName}\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;;;;;AAYA,SAAS,aAAa,EACpB,IAAI,EACJ,IAAI,EACJ,UAAU,SAAS,EACnB,YAAY,EACZ,SAAS,EACT,GAAG,OAC+C;IAClD,IAAI,CAAC,MAAM;QACT,QAAQ,GAAG,CAAC,eAAe;YAAE;YAAM;YAAM;YAAS;QAAa;QAC/D,qBAAO,8OAAC;sBAAO;;;;;;IACjB;IAEA,qBACE,8OAAC;QACC,SAAS;QACR,GAAG,KAAK;QACT,OAAO;QACP,WAAW,GAAG,kBAAkB;kBAEhC,cAAA,8OAAC,4JAAA,CAAA,UAAI;YACH,MAAM,QAAQ;YACd,QAAQ,eAAe,WAAW;YAClC,cAAY,CAAC,YAAY,EAAE,MAAM;YACjC,OAAO,CAAC,eAAe,EAAE,MAAM;sBAE9B;;;;;;;;;;;AAIT;AAEO,SAAS,cAAc,EAC5B,OAAO,EACP,SAAS,EACT,eAAe,EACf,OAAO,SAAS,EACG;IACnB,IAAI,CAAC,SAAS,QAAQ,OAAO;IAE7B,qBACE,8OAAC;QAAI,WAAW,GAAG,mCAAmC;kBACnD,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;gBAEC,MAAM;gBACL,GAAG,MAAM;gBACV,WAAW;eAHN,CAAC,OAAO,EAAE,OAAO,IAAI,EAAE;;;;;;;;;;AAQtC","debugId":null}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/sanity-icon.tsx"],"sourcesContent":["import { cn } from \"@workspace/ui/lib/utils\";\nimport type { ComponentProps } from \"react\";\nimport { memo } from \"react\";\n\ninterface IconProps extends Omit<ComponentProps<\"span\">, \"src\"> {\n  icon?:\n    | {\n        svg?: string | null;\n        name?: string | null;\n      }\n    | string\n    | null;\n  alt?: string; // Add alt text prop for accessibility\n}\n\nexport const SanityIcon = memo(function SanityIconUnmemorized({\n  icon,\n  className,\n  alt: altText = \"sanity-icon\",\n  ...props\n}: IconProps) {\n  const alt = typeof icon === \"object\" && icon?.name ? icon?.name : altText;\n  const svg = typeof icon === \"object\" ? icon?.svg : icon;\n\n  if (!svg) {\n    return null;\n  }\n\n  return (\n    <span\n      {...props}\n      className={cn(\n        \"flex size-12 items-center justify-center sanity-icon\",\n        className,\n      )}\n      // biome-ignore lint/security/noDangerouslySetInnerHtml: <explanation>\n      dangerouslySetInnerHTML={{ __html: svg }}\n      role=\"img\"\n      aria-label={alt}\n      title={alt}\n    />\n  );\n});\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;;AAaO,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS,sBAAsB,EAC5D,IAAI,EACJ,SAAS,EACT,KAAK,UAAU,aAAa,EAC5B,GAAG,OACO;IACV,MAAM,MAAM,OAAO,SAAS,YAAY,MAAM,OAAO,MAAM,OAAO;IAClE,MAAM,MAAM,OAAO,SAAS,WAAW,MAAM,MAAM;IAEnD,IAAI,CAAC,KAAK;QACR,OAAO;IACT;IAEA,qBACE,8OAAC;QACE,GAAG,KAAK;QACT,WAAW,GACT,wDACA;QAEF,sEAAsE;QACtE,yBAAyB;YAAE,QAAQ;QAAI;QACvC,MAAK;QACL,cAAY;QACZ,OAAO;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/navbar-client.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@workspace/ui/components/accordion\";\nimport { Button, buttonVariants } from \"@workspace/ui/components/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@workspace/ui/components/navigation-menu\";\nimport {\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n} from \"@workspace/ui/components/sheet\";\nimport { Sheet, SheetTrigger } from \"@workspace/ui/components/sheet\";\nimport { cn } from \"@workspace/ui/lib/utils\";\nimport { Menu } from \"lucide-react\";\nimport dynamic from \"next/dynamic\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\n\nimport { useIsMobile } from \"@/hooks/use-is-mobile\";\nimport type { QueryNavbarDataResult } from \"@/lib/sanity/sanity.types\";\n\nimport { Logo } from \"./logo\";\nimport { ModeToggle } from \"./mode-toggle\";\nimport { SanityButtons } from \"./sanity-buttons\";\nimport { SanityIcon } from \"./sanity-icon\";\ninterface MenuItem {\n  title: string;\n  description: string;\n  icon: JSX.Element;\n  href?: string;\n}\n\nfunction MenuItemLink({\n  item,\n  setIsOpen,\n}: {\n  item: MenuItem;\n  setIsOpen?: (isOpen: boolean) => void;\n}) {\n  return (\n    <Link\n      className={cn(\n        \"flex select-none gap-4 rounded-md p-3 leading-none outline-none transition-colors hover:bg-accent hover:text-accent-foreground items-center focus:bg-accent focus:text-accent-foreground\",\n      )}\n      aria-label={`Link to ${item.title ?? item.href}`}\n      onClick={() => setIsOpen?.(false)}\n      href={item.href ?? \"/\"}\n    >\n      {item.icon}\n      <div className=\"\">\n        <div className=\"text-sm font-semibold\">{item.title}</div>\n        <p className=\"text-sm leading-snug text-muted-foreground line-clamp-2\">\n          {item.description}\n        </p>\n      </div>\n    </Link>\n  );\n}\n\nfunction MobileNavbarAccordionColumn({\n  column,\n  setIsOpen,\n}: {\n  column: NonNullable<NonNullable<QueryNavbarDataResult>[\"columns\"]>[number];\n  setIsOpen: (isOpen: boolean) => void;\n}) {\n  if (column.type !== \"column\") return null;\n  return (\n    <AccordionItem value={column.title ?? column._key} className=\"border-b-0\">\n      <AccordionTrigger className=\"mb-4 py-0 font-semibold hover:no-underline hover:bg-accent hover:text-accent-foreground pr-2 rounded-md\">\n        <div\n          className={cn(buttonVariants({ variant: \"ghost\" }), \"justify-start\")}\n        >\n          {column.title}\n        </div>\n      </AccordionTrigger>\n      <AccordionContent className=\"mt-2\">\n        {column.links?.map((item) => (\n          <MenuItemLink\n            key={item._key}\n            setIsOpen={setIsOpen}\n            item={{\n              description: item.description ?? \"\",\n              href: item.href ?? \"\",\n              icon: <SanityIcon icon={item.icon} className=\"size-5 shrink-0\" />,\n              title: item.name ?? \"\",\n            }}\n          />\n        ))}\n      </AccordionContent>\n    </AccordionItem>\n  );\n}\n\nfunction MobileNavbar({ navbarData }: { navbarData: QueryNavbarDataResult }) {\n  const { logo, siteTitle, columns, buttons } = navbarData ?? {};\n  const [isOpen, setIsOpen] = useState(false);\n\n  const path = usePathname();\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: This is intentional\n  useEffect(() => {\n    setIsOpen(false);\n  }, [path]);\n  return (\n    <Sheet open={isOpen} onOpenChange={setIsOpen}>\n      <div className=\"flex justify-end\">\n        <SheetTrigger asChild>\n          <Button variant=\"outline\" size=\"icon\">\n            <Menu className=\"size-4\" />\n            <span className=\"sr-only\">Open menu</span>\n          </Button>\n        </SheetTrigger>\n      </div>\n      <SheetContent className=\"overflow-y-auto\">\n        <SheetHeader>\n          <SheetTitle>\n            <Logo src={logo} alt={siteTitle} priority />\n          </SheetTitle>\n        </SheetHeader>\n\n        <div className=\"mb-8 mt-8 flex flex-col gap-4\">\n          {columns?.map((column) => {\n            if (column.type === \"link\") {\n              return (\n                <Link\n                  key={`column-link-${column.name}-${column._key}`}\n                  href={column.href ?? \"\"}\n                  onClick={() => setIsOpen(false)}\n                  className={cn(\n                    buttonVariants({ variant: \"ghost\" }),\n                    \"justify-start\",\n                  )}\n                >\n                  {column.name}\n                </Link>\n              );\n            }\n            return (\n              <Accordion\n                type=\"single\"\n                collapsible\n                className=\"w-full\"\n                key={column._key}\n              >\n                <MobileNavbarAccordionColumn\n                  column={column}\n                  setIsOpen={setIsOpen}\n                />\n              </Accordion>\n            );\n          })}\n        </div>\n\n        <div className=\"border-t pt-4\">\n          <SanityButtons\n            buttons={buttons ?? []}\n            buttonClassName=\"w-full\"\n            className=\"flex mt-2 flex-col gap-3\"\n          />\n        </div>\n      </SheetContent>\n    </Sheet>\n  );\n}\n\nfunction NavbarColumnLink({\n  column,\n}: {\n  column: NonNullable<NonNullable<QueryNavbarDataResult>[\"columns\"]>[number];\n}) {\n  if (column.type !== \"link\") return null;\n  return (\n    <Link\n      aria-label={`Link to ${column.name ?? column.href}`}\n      href={column.href ?? \"\"}\n      legacyBehavior\n      passHref\n    >\n      <NavigationMenuLink\n        className={cn(\n          navigationMenuTriggerStyle(),\n          \"text-muted-foreground dark:text-neutral-300\",\n        )}\n      >\n        {column.name}\n      </NavigationMenuLink>\n    </Link>\n  );\n}\n\nfunction NavbarColumn({\n  column,\n}: {\n  column: NonNullable<NonNullable<QueryNavbarDataResult>[\"columns\"]>[number];\n}) {\n  if (column.type !== \"column\") return null;\n  return (\n    <NavigationMenuList>\n      <NavigationMenuItem className=\"text-muted-foreground dark:text-neutral-300\">\n        <NavigationMenuTrigger>{column.title}</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul className=\"w-80 p-3\">\n            {column.links?.map((item) => (\n              <li key={item._key}>\n                <MenuItemLink\n                  item={{\n                    description: item.description ?? \"\",\n                    href: item.href ?? \"\",\n                    icon: (\n                      <SanityIcon\n                        icon={item.icon}\n                        className=\"size-5 shrink-0\"\n                      />\n                    ),\n                    title: item.name ?? \"\",\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n    </NavigationMenuList>\n  );\n}\n\nexport function DesktopNavbar({\n  navbarData,\n}: {\n  navbarData: QueryNavbarDataResult;\n}) {\n  const { columns, buttons } = navbarData ?? {};\n\n  return (\n    <div className=\"grid grid-cols-[1fr_auto] items-center gap-8\">\n      <NavigationMenu className=\"\">\n        {columns?.map((column) =>\n          column.type === \"column\" ? (\n            <NavbarColumn key={`nav-${column._key}`} column={column} />\n          ) : (\n            <NavbarColumnLink key={`nav-${column._key}`} column={column} />\n          ),\n        )}\n      </NavigationMenu>\n\n      <div className=\"justify-self-end flex items-center gap-4\">\n        <ModeToggle />\n        <SanityButtons\n          buttons={buttons ?? []}\n          className=\"flex items-center gap-4\"\n          buttonClassName=\"rounded-[10px]\"\n        />\n      </div>\n    </div>\n  );\n}\n\nconst ClientSideNavbar = ({\n  navbarData,\n}: {\n  navbarData: QueryNavbarDataResult;\n}) => {\n  const isMobile = useIsMobile();\n\n  if (isMobile === undefined) {\n    return null; // Return null on initial render to avoid hydration mismatch\n  }\n\n  return isMobile ? (\n    <MobileNavbar navbarData={navbarData} />\n  ) : (\n    <DesktopNavbar navbarData={navbarData} />\n  );\n};\n\nfunction SkeletonMobileNavbar() {\n  return (\n    <div className=\"md:hidden\">\n      <div className=\"flex justify-end\">\n        <div className=\"h-12 w-12 rounded-md bg-muted animate-pulse\" />\n      </div>\n    </div>\n  );\n}\n\nfunction SkeletonDesktopNavbar() {\n  return (\n    <div className=\"hidden md:grid grid-cols-[1fr_auto] items-center gap-8 w-full\">\n      <div className=\"justify-center flex max-w-max flex-1 items-center gap-2\">\n        {Array.from({ length: 2 }).map((_, index) => (\n          <div\n            key={`nav-item-skeleton-${index.toString()}`}\n            className=\"h-12 w-32 rounded bg-muted animate-pulse\"\n          />\n        ))}\n      </div>\n\n      <div className=\"justify-self-end\">\n        <div className=\"flex items-center gap-4\">\n          {Array.from({ length: 2 }).map((_, index) => (\n            <div\n              key={`nav-button-skeleton-${index.toString()}`}\n              className=\"h-12 w-32 rounded-[10px] bg-muted animate-pulse\"\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function NavbarSkeletonResponsive() {\n  return (\n    <>\n      <SkeletonMobileNavbar />\n      <SkeletonDesktopNavbar />\n    </>\n  );\n}\n\n// Dynamically import the navbar with no SSR to avoid hydration issues\nexport const NavbarClient = dynamic(() => Promise.resolve(ClientSideNavbar), {\n  ssr: false,\n  loading: () => <NavbarSkeletonResponsive />,\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1181, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/preview-bar.tsx"],"sourcesContent":["\"use client\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport type { FC } from \"react\";\n\nexport const PreviewBar: FC = () => {\n  const path = usePathname();\n  return (\n    <div className=\"fixed bottom-1 left-0 right-0 z-10 px-2 md:bottom-2 md:px-4\">\n      <div className=\"mx-auto max-w-96 rounded-md border border-zinc-200 dark:border-zinc-800 bg-zinc-100/80 dark:bg-zinc-900/80 p-2 backdrop-blur-sm\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs text-zinc-700 dark:text-zinc-300\">\n              Viewing the website in preview mode.\n            </p>\n          </div>\n          <Link\n            className=\"text-xs text-zinc-500 hover:text-zinc-700 dark:text-zinc-400 dark:hover:text-zinc-200 transition-colors\"\n            href={`/api/disable-draft?slug=${path}`}\n            prefetch={false}\n          >\n            Exit\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAKO,MAAM,aAAiB;IAC5B,MAAM,OAAO,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IACvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAA2C;;;;;;;;;;;kCAI1D,8OAAC,4JAAA,CAAA,UAAI;wBACH,WAAU;wBACV,MAAM,CAAC,wBAAwB,EAAE,MAAM;wBACvC,UAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/theme-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\nimport type * as React from \"react\";\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAKO,SAAS,cAAc,EAC5B,QAAQ,EACR,GAAG,OAC6C;IAChD,qBAAO,8OAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 1272, "column": 0}, "map": {"version":3,"sources":["file:///Users/rayspartz/Desktop/Code/turbo-start-sanity/components/providers.tsx"],"sourcesContent":["\"use client\";\n\nimport type * as React from \"react\";\n\nimport { ThemeProvider } from \"./theme-provider\";\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <ThemeProvider\n      attribute=\"class\"\n      defaultTheme=\"system\"\n      enableSystem\n      disableTransitionOnChange\n    >\n      {children}\n    </ThemeProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAMO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,8OAAC,gIAAA,CAAA,gBAAa;QACZ,WAAU;QACV,cAAa;QACb,YAAY;QACZ,yBAAyB;kBAExB;;;;;;AAGP","debugId":null}}]
}